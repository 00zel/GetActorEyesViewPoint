.h


#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Character.h"
#include "AIChar.generated.h"


UCLASS()
class CITYSUBWAYTRAINMODULAR_API AAIChar : public ACharacter
{
	GENERATED_BODY()

public:
	// Sets default values for this character's properties
	AAIChar();

	UFUNCTION(BlueprintNativeEvent, Category = "AIVariables | Character")
	void GetPerceptionLocRot(FVector &OutLocation, FRotator &OutRotation) const; 
	void GetPerceptionLocRot_Implementation(FVector &OutLocation, FRotator &OutRotation) const; 

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;

	// Called to bind functionality to input
	virtual void SetupPlayerInputComponent(class UInputComponent* PlayerInputComponent) override;

	//New version of PawnSensingComponent 
	virtual void GetActorEyesViewPoint(FVector &Location, FRotator &Rotation) const override; 

};


-------------------------------------------------------------------------------------------------
cpp
#include "AIChar.h"

// Sets default values
AAIChar::AAIChar()
{
 	// Set this character to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

}

// Called when the game starts or when spawned
void AAIChar::BeginPlay()
{
	Super::BeginPlay();
	
}

// Called every frame
void AAIChar::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

// Called to bind functionality to input
void AAIChar::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)
{
	Super::SetupPlayerInputComponent(PlayerInputComponent);

}

void AAIChar::GetActorEyesViewPoint(FVector &Location, FRotator &Rotation) const 
{
	GetPerceptionLocRot(Location, Rotation);
}

void GetPerceptionLocRot_Implementation(FVector &OutLocation, FRotator &OutRotation) const
{
	OutLocation = GetActorLocation() + FVector(0, 0, 50); 
	OutRotation = GetActorRotation(); 
	
}

